{% doc %}
  @prompt
    A block where can enter a list of ingredients and its a grid (3 column) with each ingredient showing a label, title, short description. and image (to the right) the label should be like a pill look. The ingredients should be gotten from a metaobject list reference

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-ingredients-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: {{ block.settings.grid_gap }}px;
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-ingredient-card-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    padding: {{ block.settings.card_padding }}px;
    border: 1px solid {{ block.settings.card_border_color }};
    display: flex;
    align-items: flex-start;
    gap: 16px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer;
  }

  .ai-ingredient-card-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .ai-ingredient-content-{{ ai_gen_id }} {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .ai-ingredient-label-{{ ai_gen_id }} {
    display: inline-block;
    background-color: {{ block.settings.label_background_color }};
    color: {{ block.settings.label_text_color }};
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    width: fit-content;
  }

  .ai-ingredient-title-{{ ai_gen_id }} {
    color: {{ block.settings.title_color }};
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    margin: 0;
    line-height: 1.3;
  }

  .ai-ingredient-description-{{ ai_gen_id }} {
    color: {{ block.settings.description_color }};
    font-size: {{ block.settings.description_size }}px;
    line-height: 1.4;
    margin: 0;
  }

  .ai-ingredient-image-{{ ai_gen_id }} {
    width: {{ block.settings.image_size }}px;
    height: {{ block.settings.image_size }}px;
    flex-shrink: 0;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .ai-ingredient-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-ingredient-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: {{ block.settings.placeholder_background_color }};
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-ingredient-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-ingredients-empty-state-{{ ai_gen_id }} {
    grid-column: 1 / -1;
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-ingredients-empty-state-{{ ai_gen_id }} h3 {
    margin: 0 0 8px;
    font-size: 18px;
    color: #333;
  }

  .ai-ingredients-empty-state-{{ ai_gen_id }} p {
    margin: 0;
    font-size: 14px;
  }

  @media screen and (max-width: 990px) {
    .ai-ingredients-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .ai-ingredients-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: {{ block.settings.grid_gap | times: 0.75 }}px;
    }

    .ai-ingredient-card-{{ ai_gen_id }} {
      padding: {{ block.settings.card_padding | times: 0.8 }}px;
    }

    .ai-ingredient-image-{{ ai_gen_id }} {
      width: {{ block.settings.image_size | times: 0.8 }}px;
      height: {{ block.settings.image_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<div
  class="ai-ingredients-grid-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.ingredients_collection_handle != blank %}
    {% if block.settings.ingredients_collection_handle.metafields.custom.ingredients.value != blank %}
      {% for ingredient in block.settings.ingredients_collection_handle.metafields.custom.ingredients.value %}
        <div class="ai-ingredient-card-{{ ai_gen_id }}" onclick="document.getElementById('modal-{{ ai_gen_id }}-{{ forloop.index }}').showModal()">
          <div class="ai-ingredient-content-{{ ai_gen_id }}">
            {% if ingredient.label != blank %}
              <span class="ai-ingredient-label-{{ ai_gen_id }}">
                {{ ingredient.label }}
              </span>
            {% endif %}
            {% if ingredient.title != blank %}
              <h3 class="ai-ingredient-title-{{ ai_gen_id }}">
                {{ ingredient.title }}
              </h3>
            {% endif %}
            
            {% if ingredient.description != blank %}
              <p class="ai-ingredient-description-{{ ai_gen_id }}">
                {{ ingredient.description | truncate: 120 }}
              </p>
            {% endif %}
          </div>
          
          <div class="ai-ingredient-image-{{ ai_gen_id }}">
            {% if ingredient.image != blank %}
              <img
                src="{{ ingredient.image | image_url: width: 200 }}"
                alt="{{ ingredient.image.alt | default: ingredient.title | escape }}"
                loading="lazy"
                width="200"
                height="200"
              >
            {% else %}
              <div class="ai-ingredient-image-placeholder-{{ ai_gen_id }}">
                {{ 'product-apparel-1' | placeholder_svg_tag }}
              </div>
            {% endif %}
          </div>
        </div>
        
        <dialog id="modal-{{ ai_gen_id }}-{{ forloop.index }}" style="padding: 20px; border-radius: 8px; border: none; max-width: 500px;" onclick="if(event.target === this) this.close()">
          <h3>{{ ingredient.title }}</h3>
          <div>
            {% assign rich_content = ingredient.richdescription | metafield_tag %}
            {{ rich_content }}
          </div>
          <button onclick="this.closest('dialog').close()" style="margin-top: 20px; padding: 8px 16px;">Close</button>
        </dialog>
      {% endfor %}
    {% else %}
      <div class="ai-ingredients-empty-state-{{ ai_gen_id }}">
        <h3>No ingredients found</h3>
        <p>Make sure the selected collection has ingredients in its custom.ingredients metafield.</p>
      </div>
    {% endif %}
  {% else %}
    <div class="ai-ingredients-empty-state-{{ ai_gen_id }}">
      <h3>Select ingredient collection</h3>
      <p>Select a collection with ingredients in the block settings.</p>
    </div>
  {% endif %}
</div>

{% schema %}
{
  "name": "Ingredients grid",
  "settings": [
    {
      "type": "header",
      "content": "Ingredients"
    },
    {
      "type": "collection",
      "id": "ingredients_collection_handle",
      "label": "Ingredients collection",
      "info": "Select a collection with ingredients in the custom.ingredients metafield"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Grid gap",
      "default": 24
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Label style"
    },
    {
      "type": "color",
      "id": "label_background_color",
      "label": "Label background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "label_text_color",
      "label": "Label text",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Image style"
    },
    {
      "type": "range",
      "id": "image_size",
      "min": 60,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "Image size",
      "default": 80
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 6
    },
    {
      "type": "color",
      "id": "placeholder_background_color",
      "label": "Placeholder background",
      "default": "#f5f5f5"
    }
  ],
  "presets": [
    {
      "name": "Ingredients grid"
    }
  ],
  "tag": "div"
}
{% endschema %}